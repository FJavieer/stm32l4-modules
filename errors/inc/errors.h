/******************************************************************************
 *	servo.h								      *
 ******************************************************************************/


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
# ifndef		ERROR_H
	# define	ERROR_H


/******************************************************************************
 ******* headers **************************************************************
 ******************************************************************************/
/* Standard C ----------------------------------------------------------------*/
	#include <stdint.h>

/* Drivers -------------------------------------------------------------------*/
/* libalx --------------------------------------------------------------------*/
/* STM32L4 modules -----------------------------------------------------------*/


/******************************************************************************
 ******* macros ***************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* enums ****************************************************************
 ******************************************************************************/
	enum	Error_Stm32l4_Modules {
		ERROR_OK				= 0x00000000u,

		ERROR_DELAY_HAL_TIM_INIT		= 0x00000001u,
		ERROR_DELAY_HAL_TIM_START		= 0x00000002u,
		ERROR_DELAY_HAL_TIM_STOP		= 0x00000004u,
		ERROR_DELAY_INIT			= 0x00000008u,
		ERROR_DELAY_NULL			= 0x00000010u,

		ERROR_LED_INIT				= 0x00000020u,

		ERROR_PWM_HAL_TIM_INIT			= 0x00000040u,
		ERROR_PWM_HAL_TIM_CLK_CONF		= 0x00000080u,
		ERROR_PWM_HAL_TIM_MASTER_CONF		= 0x00000100u,
		ERROR_PWM_HAL_TIM_PWM_INIT		= 0x00000200u,
		ERROR_PWM_HAL_TIM_PWM_CONF		= 0x00000400u,
		ERROR_PWM_HAL_TIM_PWM_START		= 0x00000800u,
		ERROR_PWM_HAL_TIM_STOP			= 0x00001000u,
		ERROR_PWM_INIT				= 0x00002000u,
		ERROR_PWM_DUTY				= 0x00004000u,
		ERROR_PWM_CHAN				= 0x00008000u,

		ERROR_SERVO_INIT			= 0x00010000u,
		ERROR_SERVO_ID				= 0x00020000u,

		ERROR_CAN_HAL_CAN_INIT			= 0x00040000u,
		ERROR_CAN_HAL_CAN_FILTER		= 0x00080000u,
		ERROR_CAN_HAL_CAN_START			= 0x00100000u,
		ERROR_CAN_HAL_CAN_ACTIVATE_NOTIFICATION	= 0x00200000u,
		ERROR_CAN_HAL_ADD_TX_MSG		= 0x00400000u,
		ERROR_CAN_HAL_GET_RX_MSG		= 0x00800000u,
		ERROR_CAN_INIT				= 0x01000000u,
		ERROR_CAN_MSG_LOST			= 0x02000000u
	};


/******************************************************************************
 ******* structs **************************************************************
 ******************************************************************************/


/******************************************************************************
 ******* variables ************************************************************
 ******************************************************************************/
extern	uint32_t	error;


/******************************************************************************
 ******* functions ************************************************************
 ******************************************************************************/
	/**
	 * @brief	Handle error
	 *		Displays the error value by flashing a led from MSB
	 *		to LSB.  A long flash is a 1 and a short flash is a 0.
	 *		After displaying the value, it resets 'error'.
	 * @return	None
	 */
void	error_handle	(void);


/******************************************************************************
 ******* include guard ********************************************************
 ******************************************************************************/
# endif			/* error.h */


/******************************************************************************
 ******* end of file **********************************************************
 ******************************************************************************/
